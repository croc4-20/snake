// import child_process from 'child_process';
import chokidar from 'chokidar';
import { spawn } from 'child_process';
import ip from 'ip';
import path from 'path';
const address = ip.address();
let timeout;
let serverProcess;
// start building
const buildProcess = spawn('npm', ['run', 'build'], {
    env: Object.assign(Object.assign({}, process.env), { LOCAL_IP: address }),
    stdio: [0, 1, 2], // Inherit standard input/output/error
});
startServerProcess();
// watch file change and restart server
const watcher = chokidar
    .watch([path.resolve(__dirname, './'), path.resolve(__dirname, '../web/common')])
    .on('add', startServerProcess)
    .on('change', startServerProcess)
    .on('unlink', startServerProcess);
function startServerProcess(f) {
    clearTimeout(timeout);
    timeout = setTimeout(() => {
        if (f) {
            console.info(f + ' changed, restart server...');
        }
        if (serverProcess && !serverProcess.killed) {
            serverProcess.kill('SIGINT');
        }
        serverProcess = spawn('node', ['--require', 'ts-node/register', path.resolve(__dirname, './index.ts')], {
            stdio: [0, 1, 2],
        });
        serverProcess.on('error', () => {
            console.info('server error, restart now');
            setTimeout(startServerProcess, 2000);
        });
    }, 1000);
}
function close() {
    watcher.close();
    if (serverProcess && !serverProcess.killed) {
        serverProcess.kill('SIGINT');
    }
    if (buildProcess && !buildProcess.killed) {
        buildProcess.kill('SIGINT');
    }
}
process.on('exit', close);
process.on('SIGINT', close);
process.on('SIGTERM', close);
process.on('SIGHUP', close);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc2VydmVyL2Rldi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2Q0FBNkM7QUFDN0MsT0FBTyxRQUFRLE1BQU0sVUFBVSxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxLQUFLLEVBQWdCLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBRSxNQUFNLElBQUksQ0FBQztBQUNwQixPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFDeEIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQzdCLElBQUksT0FBdUIsQ0FBQztBQUM1QixJQUFJLGFBQTJCLENBQUM7QUFFaEMsaUJBQWlCO0FBQ2pCLE1BQU0sWUFBWSxHQUFpQixLQUFLLENBQUMsS0FBSyxFQUFFLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxFQUFFO0lBQ2hFLEdBQUcsa0NBQ0UsT0FBTyxDQUFDLEdBQUcsS0FDZCxRQUFRLEVBQUUsT0FBTyxHQUNsQjtJQUNELEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUcsc0NBQXNDO0NBQzFELENBQUMsQ0FBQztBQUVILGtCQUFrQixFQUFFLENBQUM7QUFFckIsdUNBQXVDO0FBQ3ZDLE1BQU0sT0FBTyxHQUFHLFFBQVE7S0FDckIsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsZUFBZSxDQUFDLENBQUMsQ0FBQztLQUNoRixFQUFFLENBQUMsS0FBSyxFQUFFLGtCQUFrQixDQUFDO0tBQzdCLEVBQUUsQ0FBQyxRQUFRLEVBQUUsa0JBQWtCLENBQUM7S0FDaEMsRUFBRSxDQUFDLFFBQVEsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0FBRXBDLFNBQVMsa0JBQWtCLENBQUMsQ0FBVTtJQUNwQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdEIsT0FBTyxHQUFHLFVBQVUsQ0FBQyxHQUFHLEVBQUU7UUFDeEIsSUFBSSxDQUFDLEVBQUUsQ0FBQztZQUNOLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLDZCQUE2QixDQUFDLENBQUM7UUFDbEQsQ0FBQztRQUVELElBQUksYUFBYSxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQzNDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDL0IsQ0FBQztRQUVELGFBQWEsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsV0FBVyxFQUFFLGtCQUFrQixFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQyxDQUFDLEVBQUU7WUFDdEcsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDakIsQ0FBQyxDQUFDO1FBRUgsYUFBYSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFO1lBQzdCLE9BQU8sQ0FBQyxJQUFJLENBQUMsMkJBQTJCLENBQUMsQ0FBQztZQUMxQyxVQUFVLENBQUMsa0JBQWtCLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDdkMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDWCxDQUFDO0FBRUQsU0FBUyxLQUFLO0lBQ1osT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBRWhCLElBQUksYUFBYSxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQzNDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVELElBQUksWUFBWSxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3pDLFlBQVksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUIsQ0FBQztBQUNILENBQUM7QUFFRCxPQUFPLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztBQUMxQixPQUFPLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUM1QixPQUFPLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUM3QixPQUFPLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQyJ9